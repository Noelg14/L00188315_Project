    # This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Project Artefact

on: 
  workflow_dispatch:
  push:
    branches:
      - main # build when merged in master

permissions: write-all

jobs:
  build:
    
    runs-on: ubuntu-latest
    name: Build project artefact

    steps:
    - uses: actions/checkout@v4

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        enable-AzPSSession: true
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Nodejs
      uses: actions/setup-node@v4
      with:
       node-version: '22'

    - name: Restore dotnet dependencies
      run: dotnet restore .

    - name: Build Angular Application
      run: |
        cd l00188315_project.client
        npm ci
        npm run build
        cd ..

    - name: Publish .NET Application
      run: dotnet publish --configuration Release --no-restore --property:PublishDir=./app

    - name: List Build Directory
      run: ls -la ./L00188315_Project.Server/app/
      continue-on-error: true
    
    - name: Download Keyvault files
      run: |
        az keyvault secret download --vault-name ${{vars.KEYVAULT}} --name private-Key --file ./L00188315_Project.Server/app/private.key
        az keyvault secret download --vault-name ${{vars.KEYVAULT}} --name transportPem --file ./L00188315_Project.Server/app/transport.pem
        az keyvault certificate download --vault-name ${{vars.KEYVAULT}} --name revolutPfx --file ./L00188315_Project.Server/app/combined.pfx

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: "publish"
        path: ./L00188315_Project.Server/app/

  deployDev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Dev'
      url: "test.noelgriffin.ie"
    steps:
      - name: "Deploy"
        run: echo "Deploying"

  deploy:
    runs-on: ubuntu-latest
    needs: deployDev
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: "publish"
          path: ./app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7126B6E6242F41278650E774CACCFCF8 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_A34E9AB11A5A4F979CC46A3C8E075855 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_0AD9FFD26BFF47FFABF78A86999164E8 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{vars.APP_NAME}}
          package: ./app